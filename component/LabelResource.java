/*
 *  __  __      
 * /\ \/\ \  __________   
 * \ \ \_\ \/_______  /\   
 *  \ \  _  \  ____/ / /  
 *   \ \_\ \_\ \ \/ / / 
 *    \/_/\/_/\ \ \/ /  
 *             \ \  /
 *              \_\/
 *
 * -----------------------------------------------------------------------------
 * @author: Herbert Veitengruber 
 * @version: 1.0.0
 * -----------------------------------------------------------------------------
 *
 * Copyright (c) 2013 Herbert Veitengruber 
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/mit-license.php
 */
package jhv.component;

import java.awt.Component;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

import jhv.util.debug.logger.ApplicationLogger;


/**
 * loads a label properties file either from jar or external.
 * 
 * the labels filename is generated by its full class name and .lbl
 * this class looks into a localized subdir of the basePath
 * 
 */
public class LabelResource 
		extends Properties
{
	// ============================================================================
	//  Constants
	// ============================================================================
		
	private static final long serialVersionUID = 1L;

	private static final String EXTENSION = ".lbl";
	
	
	// ============================================================================
	//  Constructors
	// ============================================================================
	
	/**
	 * Constructor 1.
	 * Can be used to load a generic label file
	 * 
	 * @param filename
	 * @param locale 
	 * 		locale string e.g. de_DE
	 * @param basePath
	 */
	public LabelResource(
			String filename, 
			String locale, 
			String basePath
		) 
	{
		super();
		
		filename = basePath 
				+ "/"
				+ locale
				+ "/"
				+ filename
				+ EXTENSION;
		
		this.loadLabels(filename);
    }
	
	
	/**
	 * Constructor 2.
	 * can be used to load a component specific label file.
	 * 
	 * @param c
	 * @param locale 
	 * 		locale string e.g. de_DE
	 * @param basePath
	 */
	public LabelResource(
			Component c, 
			String locale, 
			String basePath
		) 
	{
		super();
		
		String filename = basePath 
				+ "/"
				+ locale
				+ "/"
				+ c.getClass().getName()
				+ EXTENSION;
		
		this.loadLabels(filename);
    }
	
	// ============================================================================
	//  Functions
	// ============================================================================
		
	/**
	 * loadLabels
	 * 
	 * @param filename
	 */
	private void loadLabels(String filename)
	{
		try 
    	{
    		this.load(
            		getClass().getClassLoader().getResourceAsStream(filename)
            	);
            
        } catch( IOException | NullPointerException e1 ) {
        	// no resource found try to load from file
        	try {
        		FileInputStream fis = new FileInputStream(filename);
        		this.load(fis);
        		fis.close();
        		
        	} catch( Exception e2 ) {
        		// both loading tries failed
        		// so no property file is available
        		ApplicationLogger.logError("LabelResource " + filename + " not found!");
        	}
        }
	}
}
